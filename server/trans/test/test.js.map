{"version":3,"sources":["../../src/test/test.js"],"names":["assert","server","expect","app","expressServer","use","describe","it","to","be","a","an","instanceOf","request","post","then","res","have","status","json","body","get","put","delete","Error","catch","err"],"mappings":"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","file":"test.js","sourcesContent":["\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-Http';\r\nimport Server from './../app';\r\nimport EventCenters from './../models/eventCentersmodel';\r\nimport events from './../models/eventsmodel';\r\nconst assert = chai.assert;\r\nconst server = new Server();\r\nconst expect = chai.expect;\r\nconst app = server.expressServer();\r\nchai.use(chaiHttp);\r\n\r\ndescribe('Server', () => {\r\n  describe('unit test', () => {\r\n    it('should export a function', () => {\r\n      expect(Server).to.be.a('function');\r\n    });\r\n    it('should to be an object', () => {\r\n      expect(server).to.be.a('Object');\r\n    });\r\n    it('server should be an instanceOf Server', () => {\r\n      expect(server).to.be.an.instanceOf(Server);\r\n    });\r\n  });\r\n  describe('API endpoints: Valid cases', () => {\r\n    // test for events endpoints\r\n    describe('API endpoint /api/events', () => {\r\n      it('should create an events', () => {\r\n        return chai.request(app)\r\n        .post('/api/events')\r\n        .then((res) => {\r\n          expect(res).to.have.status(201);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('object');\r\n        })\r\n      });\r\n\r\n      it('should get all events given owner id', () => {\r\n        return chai.request(app)\r\n        .get('/api/events/1')\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('array');\r\n        })\r\n      })\r\n\r\n      it('should update an event given its id', () => {\r\n        return chai.request(app)\r\n        .put('/api/events/1')\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('object');\r\n        })\r\n      });\r\n\r\n      it('should get an event belonging to a user given the event id', () => {\r\n        return chai.request(app)\r\n        .get('/api/events/users/1')\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('object');\r\n        })\r\n      });\r\n\r\n      it('should get all events irrespective of its id', () => {\r\n          return chai.request(app)\r\n          .get('/api/events')\r\n          .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('array');\r\n        })\r\n      });\r\n\r\n      // handle case to get all event given the center Id\r\n      it('should get all events irrespective of given its center id', () => {\r\n          return chai.request(app)\r\n          .get('/api/events/centers/2')\r\n          .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('array');\r\n        })\r\n      });\r\n     \r\n      it('should delete an events given its id', () => {\r\n          return chai.request(app)\r\n          .delete('/api/events/1')\r\n          .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('object');\r\n        })\r\n      });\r\n    })\r\n    \r\n    // test for center end points\r\n    describe('API endpoint /api/eventCenters', () => {\r\n      it('should create event Center', () => {\r\n        return chai.request(app)\r\n        .post('/api/centers')\r\n        .then((res) => {\r\n          expect(res).to.have.status(201);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('object');\r\n        })\r\n      });\r\n\r\n      it('should get a single events center given its id', () => {\r\n        return chai.request(app)\r\n        .get('/api/centers/1')\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('object');\r\n        })\r\n      });\r\n\r\n      it('should get all event centers', () => {\r\n        return chai.request(app)\r\n        .get('/api/centers')\r\n        .then((res) => {\r\n          expect(res).to.have.status(200);\r\n          expect(res).to.be.json;\r\n          expect(res.body).to.be.an('array');\r\n        })\r\n      })\r\n    })\r\n  })\r\n  // Handle invalid cases\r\n  describe('API endpoints: Invalid paths', () => {\r\n    describe('Event', () => {\r\n    it('should not get an event belonging to a user given the event id', () => {\r\n      return chai.request(app)\r\n      .get('/api/events/user/5')\r\n      .then((res) => {\r\n        throw new Error('Invalid Path');\r\n      })\r\n      .catch((err) => {\r\n        expect(err).to.have.status(404);\r\n      })\r\n    });\r\n    it('should not get all events irrespective of its id', () => {\r\n     return chai.request(app)\r\n       .get('/api/event/')\r\n       .then((res) => {\r\n         throw new Error('Invalid Path');\r\n        })\r\n        .catch((err) => {\r\n          expect(err).to.have.status(404);\r\n        })\r\n      });\r\n    it('should not get all events irrespective of its id', () => {\r\n        return chai.request(app)\r\n      .get('/api/events/center/8')\r\n      .then((res) => {\r\n       throw new Error('Invalid Path');\r\n      })\r\n      .catch((err) => {\r\n        expect(err).to.have.status(404);\r\n      })\r\n    });\r\n    it('should not delete an events given its id', () => {\r\n      return chai.request(app)\r\n      .delete('/api/event/')\r\n      .then((res) => {\r\n       throw new Error('Invalid Path');\r\n      })\r\n      .catch((err) => {\r\n        expect(err).to.have.status(404);\r\n      })\r\n    });\r\n    it('should not update an event given its id', () => {\r\n      return chai.request(app)\r\n      .put('/api/event/6')\r\n      .then((res) => {\r\n       throw new Error('Invalid Path');\r\n      })\r\n      .catch((err) => {\r\n        expect(err).to.have.status(404);\r\n      })\r\n    }); \r\n  });\r\n  \r\ndescribe('eventCenters', () => {\r\n      it('should not create event Center', () => {\r\n        return chai.request(app)\r\n        .post('/api/center')\r\n        .then((res) => {\r\n          throw new Error('Invalid Path');\r\n        })\r\n        .catch((err) => {\r\n          expect(err).to.have.status(404);\r\n        })\r\n      });\r\n\r\n      it('should not get a single events center given its id', () => {\r\n        return chai.request(app)\r\n        .get('/api/center/1')\r\n        .then((res) => {\r\n          throw new Error('Invalid Path');\r\n        })\r\n        .catch((err) => {\r\n         expect(err).to.have.status(404);\r\n        })\r\n       });\r\n\r\n      it('should not get all event centers', () => {\r\n        return chai.request(app)\r\n        .get('/api/center')\r\n        .then((res) => {\r\n          throw new Error('Invalid Path');\r\n        })\r\n        .catch((err) => {\r\n          expect(err).to.have.status(404);\r\n        })\r\n      })\r\n    })\r\n  })\r\n  \r\n});\r\n"]}