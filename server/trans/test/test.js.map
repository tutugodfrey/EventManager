{"version":3,"sources":["../../src/test/test.js"],"names":["assert","server","expect","app","expressServer","use","describe","it","to","be","a","an","instanceOf","request","post","then","res","have","status","get","put","delete"],"mappings":"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","file":"test.js","sourcesContent":["\nimport chai from 'chai';\nimport chaiHttp from 'chai-Http';\nimport Server from './../app';\nimport EventCenters from './../models/eventCentersmodel';\nimport events from './../models/eventsmodel';\nconst assert = chai.assert;\nconst server = new Server();\nconst expect = chai.expect;\nconst app = server.expressServer();\nchai.use(chaiHttp);\n\ndescribe('Server', () => {\n  describe('unit test', () => {\n    it('should export a function', () => {\n      expect(Server).to.be.a('function');\n    });\n    it('should to be an object', () => {\n      expect(server).to.be.a('Object');\n    });\n    it('server should be an instanceOf Server', () => {\n      expect(server).to.be.an.instanceOf(Server);\n    });\n  });\n  describe('API endpoints', () => {\n    // test for events endpoints\n    describe('API endpoint /api/events', () => {\n      it('should create an events', () => {\n        return chai.request(app)\n        .post('/api/events')\n        .then((res) => {\n          expect(res).to.have.status(201);\n        })\n      });\n\n      it('should get all events given owner id', () => {\n        return chai.request(app)\n        .get('/api/events/1')\n        .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      })\n\n      it('should update an event given its id', () => {\n        return chai.request(app)\n        .put('/api/events/1')\n        .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      });\n\n      it('should get an event belonging to a user given the event id', () => {\n        return chai.request(app)\n        .get('/api/events/users/1')\n        .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      });\n\n      it('should get all events irrespective of its id', () => {\n          return chai.request(app)\n          .get('/api/events')\n          .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      });\n\n      // handle case to get all event given the center Id\n      it('should get all events irrespective of its id', () => {\n          return chai.request(app)\n          .get('/api/events/centers/2')\n          .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      });\n     \n      it('should delete an events given its id', () => {\n          return chai.request(app)\n          .delete('/api/events/1')\n          .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      });\n    })\n    \n    // test for center end points\n    describe('API endpoint /api/eventCenters', () => {\n      it('should create event Center', () => {\n        return chai.request(app)\n        .post('/api/centers')\n        .then((res) => {\n          expect(res).to.have.status(201);\n        })\n      });\n\n      it('should get a single events center given its id', () => {\n        return chai.request(app)\n        .get('/api/centers/1')\n        .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      });\n\n      it('should get all event centers', () => {\n        return chai.request(app)\n        .get('/api/centers')\n        .then((res) => {\n          expect(res).to.have.status(200);\n        })\n      })\n      \n    })\n  })\n});\n"]}