{"version":3,"sources":["../../src/models/index.js"],"names":["config","basename","__filename","env","process","NODE_ENV","require","join","__dirname","console","log","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","name","Object","keys","modelName","associate","Sequelize"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,iBAAOA,MAAP;AACA,IAAMC,WAAW,eAAKA,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA;AACA,IAAML,SAASM,QAAQ,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,aAAxC,CAAR,EAAgEL,GAAhE,CAAf;AACA;AACAM,QAAQC,GAAR,CAAYP,GAAZ;AACA,IAAMQ,KAAK,EAAX;AACA,IAAIC,kBAAJ;AACA,IAAIZ,OAAOa,gBAAX,EAA6B;AAC3BD,cAAY,wBAAcR,QAAQD,GAAR,CAAYH,OAAOa,gBAAnB,CAAd,EAAoDb,MAApD,CAAZ;AACD,CAFD,MAEO;AACLY,cAAY,wBAAcZ,OAAOc,QAArB,EAA+Bd,OAAOe,QAAtC,EAAgDf,OAAOgB,QAAvD,EAAiEhB,MAAjE,CAAZ;AACD;AACD,aACGiB,WADH,CACeT,SADf,EAEGU,MAFH,CAEU,UAACC,IAAD,EAAU;AAChB,SAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASlB,QAAvC,IAAqDkB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAACH,IAAD,EAAU;AACjB;AACA,MAAMI,QAAQX,UAAU,QAAV,EAAoB,eAAKL,IAAL,CAAUC,SAAV,EAAqBW,IAArB,CAApB,CAAd;AACAR,KAAGY,MAAMC,IAAT,IAAiBD,KAAjB;AACD,CATH;;AAWAE,OAAOC,IAAP,CAAYf,EAAZ,EAAgBW,OAAhB,CAAwB,UAACK,SAAD,EAAe;AACrC,MAAIhB,GAAGgB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BjB,OAAGgB,SAAH,EAAcC,SAAd,CAAwBjB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGkB,SAAH;kBACelB,E","file":"index.js","sourcesContent":["import dotenv from 'dotenv';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize from 'sequelize';\r\n\r\ndotenv.config();\r\nconst basename = path.basename(__filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\n/* eslint-disable import/no-dynamic-require */\r\nconst config = require(path.join(__dirname, '../..', 'config', 'config.json'))[env];\r\n/* eslint-disable no-console */\r\nconsole.log(env);\r\nconst db = {};\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter((file) => {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\r\n  })\r\n  .forEach((file) => {\r\n    /* eslint-disable dot-notation */\r\n    const model = sequelize['import'](path.join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach((modelName) => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\nexport default db;\r\n"]}