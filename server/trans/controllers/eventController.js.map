{"version":3,"sources":["../../src/controllers/eventController.js"],"names":["functs","EventsController","events","req","res","id","getId","newEvent","centerName","body","location","facilities","typeOfEvent","dateOfEvent","cost","centerId","ownerId","push","status","send","eventId","parseInt","params","getEventId","verifyId","event","eventPos","indexOf","eventCollector","length"],"mappings":"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","file":"eventController.js","sourcesContent":["import events from './../models/eventsModel';\r\nimport eventCenters from './../models/eventCentersModel';\r\nimport Functs from './../funcs/funcs';\r\n// import EventCenterController from './'\r\nconst functs = new Functs();\r\n\r\n\r\nconst EventsController = class {\r\n  constructor() {\r\n    this.events = events;\r\n  }\r\n\r\n  // controller to add event\r\n  addEvent(req, res) {\r\n    const id = functs.getId(events);\r\n    const newEvent = {\r\n\t\t  id,\r\n\t\t  centerName: req.body.centerName,\r\n      location: req.body.location,\r\n\t\t  facilities: req.body.facilities,\r\n\t\t  typeOfEvent: req.body.typeOfEvent,\r\n      dateOfEvent: req.body.cost,\r\n      centerId: req.body.centerId,\r\n      ownerId: req.body.ownerId,\r\n    };\r\n    events.push(newEvent);\r\n    res.status(201).send(newEvent);\r\n  }\r\n\r\n  // controll to update event\r\n  updateEvent(req, res) {\r\n    const eventId = parseInt(req.params.eventId);\r\n    const getEventId = functs.verifyId(events, eventId);\r\n    let newEvent;\r\n    for (const event of events) {\r\n      if (event.id === eventId) {\r\n        const id = eventId;\r\n\t\t\t  const centerName = req.body.centerId || event[centerName];\r\n        const location = req.body.location || event[location];\r\n        const facilities = req.body.facilities || event[facilities];\r\n        const typeOfEvent = req.body.typeOfEvent || event[typeOfEvent];\r\n        const dateOfEvent = req.body.dateOfEvent || event[dateOfEvent];\r\n        const centerId = req.body.centerId || event[centerId];\r\n        const ownerId = req.body.ownerId || event[ownerId];\r\n        newEvent = {\r\n          id,\r\n          centerName,\r\n          location,\r\n          facilities,\r\n          typeOfEvent,\r\n          dateOfEvent,\r\n          centerId,\r\n          ownerId,\r\n        };\r\n      }\r\n    }\r\n    const eventPos = events.indexOf(newEvent);\r\n    if (events[eventPos] = newEvent) {\r\n      res.status(200).send(newEvent);\r\n    } else {\r\n      res.status(404).send('Not Found: no action taken');\r\n    }\r\n  }\r\n\r\n  // controller to get an event\r\n  getEvents(req, res) {\r\n  \tconst ownerId = req.params.ownerId;\r\n  \tconst eventCollector = [];\r\n  \tfor (const event of events) {\r\n  \t\tif (event[ownerId] === ownerId) {\r\n  \t\t\teventCollector.push(event);\r\n  \t\t}\r\n  \t}\r\n  \tif (eventCollector.length >= 1) {\r\n  \t\tres.status(200).send(eventCollector);\r\n  \t} else {\r\n  \t\tres.status(404).send('Not Found');\r\n  \t}\r\n  }\r\n\r\n  // controller to delete\r\n  deleteEvent(req, res) {\r\n    const eventId = req.body.eventId;\r\n    const getEventId = functs.verifyId(events, eventId);\r\n    let eventPos;\r\n    for (const event of events) {\r\n      if (event[getEventId] === eventId) {\r\n        eventPos = events.indexOf(event);\r\n\t\t  }\r\n    }\r\n    if (eventPos) {\r\n      delete events[eventPos];\r\n      res.status(200).send('deleted');\r\n    } else {\r\n      res.status(404).send('Not Found: no action taken');\r\n    }\r\n  }\r\n};\r\n\r\nexport default EventsController;\r\n"]}