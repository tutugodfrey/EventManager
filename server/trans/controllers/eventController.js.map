{"version":3,"sources":["../../src/controllers/eventController.js"],"names":["functs","EventsController","events","req","res","id","getId","newEvent","centerName","body","location","facilities","typeOfEvent","dateOfEvent","cost","centerId","ownerId","push","status","send","eventId","parseInt","params","getEventId","verifyId","event","eventPos","indexOf","eventCollector","length"],"mappings":"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","file":"eventController.js","sourcesContent":["import events from './../models/eventsModel';\r\nimport eventCenters from './../models/eventCentersModel';\r\nimport Functs from './../funcs/funcs';\r\n// import EventCenterController from './'\r\nconst functs = new Functs();\r\n\r\n\r\nconst EventsController = class {\r\n\tconstructor() {\r\n   this.events = events;\r\n\t}\r\n\r\n\t// controller to add event\r\n\taddEvent(req, res){\r\n\t\tconst  id = functs.getId(events);\r\n\t\tconst newEvent = {\r\n\t\t  id:id,\r\n\t\t  centerName:req.body.centerName,\r\n\t\t\tlocation:req.body.location,\r\n\t\t  facilities:req.body.facilities,\r\n\t\t  typeOfEvent:req.body.typeOfEvent,\r\n\t\t\tdateOfEvent:req.body.cost,\r\n\t\t\tcenterId:req.body.centerId,\r\n\t\t\townerId:req.body.ownerId\r\n\t\t}\r\n\t\tevents.push(newEvent);\r\n\t\tres.status(201).send(newEvent);\r\n\t}\r\n\r\n\t// controll to update event\r\n\tupdateEvent(req, res){\r\n\t\tconst eventId = parseInt(req.params.eventId);\r\n\t\tconst getEventId = functs.verifyId(events, eventId);\r\n\t\tlet newEvent;\r\n\t\tfor(let event of events) {\r\n\t\t\tif(event.id === eventId){\r\n\t\t\t\tconst id = eventId\r\n\t\t\t  const centerName = req.body.centerId || event[centerName];\r\n\t\t\t\tconst location = req.body.location || event[location];\r\n\t\t\t\tconst facilities = req.body.facilities || event[facilities];\r\n\t\t\t\tconst typeOfEvent = req.body.typeOfEvent || event[typeOfEvent];\r\n\t\t\t\tconst dateOfEvent = req.body.dateOfEvent || event[dateOfEvent];\r\n\t\t\t\tconst centerId = req.body.centerId || event[centerId];\r\n\t\t\t\tconst ownerId = req.body.ownerId || event[ownerId];\r\n\t\t\t\tnewEvent = {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tcenterName,\r\n\t\t\t\t\tlocation,\r\n\t\t\t\t\tfacilities,\r\n\t\t\t\t\ttypeOfEvent,\r\n\t\t\t\t\tdateOfEvent,\r\n\t\t\t\t\tcenterId,\r\n\t\t\t\t\townerId\r\n\t\t\t\t} \r\n\t\t\t} \r\n\t\t}\r\n\t\tconst eventPos = events.indexOf(newEvent)\r\n\t\tif(events[eventPos] = newEvent){\r\n\t\t\tres.status(200).send(newEvent);\r\n\t\t} else {\r\n\t\t\tres.status(404).send('Not Found: no action taken');\r\n\t\t}\r\n  }\r\n\r\n  // controller to get an event\r\n  getEvents(req, res){\r\n  \tconst ownerId = req.params.ownerId;\r\n  \tlet eventCollector = [];\r\n  \tfor(let event of events){\r\n  \t\tif(event[ownerId] === ownerId){\r\n  \t\t\teventCollector.push(event);\r\n  \t\t}\r\n  \t}\r\n  \tif(eventCollector.length >= 1){\r\n  \t\tres.status(200).send(eventCollector);\r\n  \t} else {\r\n  \t\tres.status(404).send('Not Found');\r\n  \t}\r\n  }\r\n\r\n\t// controller to delete\r\n\tdeleteEvent(req, res){\r\n\t\tconst eventId = req.body.eventId;\r\n\t\tconst getEventId = functs.verifyId(events, eventId);\r\n\t\tlet eventPos;\r\n\t\tfor(let event of events){\r\n\t\t\tif(event[getEventId] === eventId){\r\n\t\t\t\teventPos = events.indexOf(event);\r\n\t\t  }\r\n\t\t}\r\n\t\tif(eventPos){\r\n\t\t\tdelete events[eventPos];\r\n\t\t\tres.status(200).send('deleted');\r\n\t\t} else {\r\n\t\t\tres.status(404).send('Not Found: no action taken');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default EventsController;"]}