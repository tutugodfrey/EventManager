{"version":3,"sources":["../../src/controllers/eventCenterController.js"],"names":["centers","EventCenterController","req","res","body","userType","find","where","centerName","location","then","eventCenter","destination","file","path","create","sits","parseInt","cost","facilities","imgUrl","userId","status","send","center","catch","error","message","findAll","centerId","params","id","name","eventCenters","update","updatedCenter","destroy"],"mappings":";;;;;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,UAAU,iBAAOA,OAAvB;;AAEA,IAAMC;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACJ;AADI,mCAEWC,GAFX,EAEgBC,GAFhB,EAEqB;AACvB,UAAGD,IAAIE,IAAJ,CAASC,QAAT,KAAsB,OAAzB,EAAkC;AAChC,eAAOL,QACNM,IADM,CAEL;AACEC,iBAAO;AACLC,wBAAYN,IAAIE,IAAJ,CAASI,UADhB;AAELC,sBAASP,IAAIE,IAAJ,CAASK;AAFb;AADT,SAFK,EASNC,IATM,CASD,uBAAe;AACnB,cAAG,CAACC,WAAJ,EAAgB;AACd,gBAAMC,cAAc,6BAAUV,IAAIW,IAAJ,CAASC,IAAnB,CAApB;AACD;AACC,mBAAOd,QACNe,MADM,CACC;AACNP,0BAAYN,IAAIE,IAAJ,CAASI,UADf;AAENC,wBAAUP,IAAIE,IAAJ,CAASK,QAFb;AAGNO,oBAAMC,SAASf,IAAIE,IAAJ,CAASY,IAAlB,CAHA;AAINE,oBAAMD,SAASf,IAAIE,IAAJ,CAASc,IAAlB,CAJA;AAKNC,0BAAYjB,IAAIE,IAAJ,CAASe,UALf;AAMNC,sBAAQR,WANF;AAONS,sBAAQJ,SAASf,IAAIE,IAAJ,CAASiB,MAAlB;AAPF,aADD,EAUNX,IAVM,CAUD;AAAA,qBAAUP,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,MAArB,CAAV;AAAA,aAVC,EAWNC,KAXM,CAWA;AAAA,qBAAStB,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB,CAAT;AAAA,aAXA,CAAP;AAYD,WAfD,MAeO;AACLvB,gBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,uCAAX,EAArB;AACD;AACF,SA5BM,EA6BNF,KA7BM,CA6BA;AAAA,iBAAStB,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACI,SAAS,sBAAV,EAArB,CAAT;AAAA,SA7BA,CAAP;AA8BD,OA/BD,MA+BO;AACLxB,YAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,4CAAX,EAArB;AACD;AACF;;AAED;;AAvCI;AAAA;AAAA,oCAwCYzB,GAxCZ,EAwCiBC,GAxCjB,EAwCsB;AACxB,aAAOH,QACN4B,OADM,GAENlB,IAFM,CAED,uBAAe;AACnB,YAAGC,WAAH,EAAe;AACbR,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBZ,WAArB;AACD;AACF,OANM,EAONc,KAPM,CAOA;AAAA,eAAStB,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,uBAAX,EAArB,CAAT;AAAA,OAPA,CAAP;AAQD;;AAED;;AAnDI;AAAA;AAAA,mCAoDWzB,GApDX,EAoDgBC,GApDhB,EAoDqB;AACvB,UAAM0B,WAAWZ,SAASf,IAAI4B,MAAJ,CAAWD,QAApB,CAAjB;AACA,aAAO7B,QACNM,IADM,CAEL;AACEC,eAAM;AACJwB,cAAIF;AADA;AADR,OAFK,EAQNnB,IARM,CAQD,uBAAe;AACnB,YAAGC,WAAH,EAAe;AACbR,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBZ,WAArB;AACD;AACF,OAZM,EAaNc,KAbM,CAaA;AAAA,eAAStB,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnCI,mBAAS;AAD0B,SAArB,CAAT;AAAA,OAbA,CAAP;AAgBD;;AAED;;AAxEI;AAAA;AAAA,oCAyEYzB,GAzEZ,EAyEiBC,GAzEjB,EAyEsB;AACxB,aAAOH,QACNM,IADM,CAEL;AACEC,eAAM;AACJyB,gBAAK9B,IAAI4B,MAAJ,CAAWE;AADZ;AADR,OAFK,EAQNtB,IARM,CAQD,uBAAe;AACnB,YAAGC,WAAH,EAAe;AACbR,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBZ,WAArB;AACD,SAFD,MAEO;AACLR,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,+BAAX,EAArB;AACD;AACF,OAdM,EAeNF,KAfM,CAeA;AAAA,eAAStB,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnCI,mBAAS;AAD0B,SAArB,CAAT;AAAA,OAfA,CAAP;AAkBD;AACA;;AA7FG;AAAA;AAAA,wCA8FiBzB,GA9FjB,EA8FsBC,GA9FtB,EA8F2B;AAC7B,aAAOH,QACNM,IADM,CAEL;AACEC,eAAO;AACLE,oBAAUP,IAAI4B,MAAJ,CAAWrB;AADhB;AADT,OAFK,EAQNC,IARM,CAQD,wBAAgB;AACpB,YAAGuB,YAAH,EAAgB;AACd9B,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,YAArB;AACD;AACF,OAZM,EAaNR,KAbM,CAaA;AAAA,eAAStB,IAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnCI,mBAAS;AAD0B,SAArB,CAAT;AAAA,OAbA,CAAP;AAgBD;AA/GG;AAAA;AAAA,sCAiHczB,GAjHd,EAiHmBC,GAjHnB,EAiHwB;AAC1B,UAAGD,IAAIE,IAAJ,CAASC,QAAT,KAAsB,OAAzB,EAAkC;AAChC,YAAMwB,WAAWZ,SAASf,IAAI4B,MAAJ,CAAWD,QAApB,CAAjB;AACA,eAAO7B,QACNM,IADM,CAEL;AACEC,iBAAO;AACLwB,gBAAIF;AADC;AADT,SAFK,EAQNnB,IARM,CAQD,uBAAe;AACnB,cAAGC,WAAH,EAAe;AACb,mBAAOA,YACNuB,MADM,CACC;AACN1B,0BAAYN,IAAIE,IAAJ,CAASI,UAAT,IAAuBG,YAAYH,UADzC;AAENC,wBAASP,IAAIE,IAAJ,CAASK,QAAT,IAAqBE,YAAYF,QAFpC;AAGNO,oBAAMd,IAAIE,IAAJ,CAASY,IAAT,IAAiBL,YAAYK,IAH7B;AAINE,oBAAMhB,IAAIE,IAAJ,CAASc,IAAT,IAAiBP,YAAYO,IAJ7B;AAKNC,0BAAYjB,IAAIE,IAAJ,CAASe,UAAT,IAAuBR,YAAYQ;AALzC,aADD,EAQNT,IARM,CAQD,yBAAiB;AACrBP,kBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,aAArB;AACD,aAVM,CAAP;AAWD,WAZD,MAYO;AACLhC,gBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACI,SAAS,wBAAV,EAArB;AACD;AACF,SAxBM,EAyBNF,KAzBM,CAyBA,iBAAS;AACdtB,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB;AACD,SA3BM,CAAP;AA4BD,OA9BD,MA8BO;AACLvB,YAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,wCAAX,EAArB;AACD;AACF;AAnJG;AAAA;AAAA,sCAoJczB,GApJd,EAoJmBC,GApJnB,EAoJwB;AAC1B,UAAGD,IAAIE,IAAJ,CAASC,QAAT,KAAsB,OAAzB,EAAkC;AAChC,YAAMwB,WAAWZ,SAASf,IAAI4B,MAAJ,CAAWD,QAApB,CAAjB;AACA,eAAO7B,QACNM,IADM,CAEL;AACEC,iBAAO;AACLwB,gBAAIF;AADC;AADT,SAFK,EAQNnB,IARM,CAQD,uBAAe;AACnB,cAAGC,WAAH,EAAe;AACb,mBAAOA,YACNyB,OADM,CACE;AACP7B,qBAAM;AACJwB,oBAAGF;AADC;AADC,aADF,EAMNnB,IANM,CAMD,yBAAiB;AACrBP,kBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,yBAAX,EAArB;AACD,aARM,CAAP;AASD,WAVD,MAUO;AACLxB,gBAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACI,SAAS,wBAAV,EAArB;AACD;AACF,SAtBM,EAuBNF,KAvBM,CAuBA,iBAAS;AACdtB,cAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB;AACD,SAzBM,CAAP;AA0BD,OA5BD,MA4BO;AACLvB,YAAImB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,SAAS,wCAAX,EAArB;AACD;AACF;AApLG;;AAAA;AAAA,GAAN;kBAuLe1B,qB","file":"eventCenterController.js","sourcesContent":["\r\nimport models from './../models';\r\nimport { getImgUrl } from './..//funcs/HelperFuncts'\r\nconst centers = models.centers;\r\n\r\nconst EventCenterController = class {\r\n  // add a new event center\r\n  addEventCenter(req, res) {\r\n    if(req.body.userType === 'admin') {\r\n      return centers\r\n      .find(\r\n        {\r\n          where: {\r\n            centerName: req.body.centerName,\r\n            location:req.body.location\r\n          }\r\n        }\r\n      )\r\n      .then(eventCenter => {\r\n        if(!eventCenter){\r\n          const destination = getImgUrl(req.file.path);\r\n         // const destination = 'path-to-photo';\r\n          return centers\r\n          .create({\r\n            centerName: req.body.centerName,\r\n            location: req.body.location,\r\n            sits: parseInt(req.body.sits),\r\n            cost: parseInt(req.body.cost),\r\n            facilities: req.body.facilities,\r\n            imgUrl: destination,\r\n            userId: parseInt(req.body.userId)\r\n          })\r\n          .then(center => res.status(201).send(center))\r\n          .catch(error => res.status(400).send(error));\r\n        } else {\r\n          res.status(200).send({ message: 'a center with this name already exist'})\r\n        }\r\n      })\r\n      .catch(error => res.status(404).send({message: 'something went wrong'}))\r\n    } else {\r\n      res.status(402).send({ message: 'You are not allowed to perform this action'})\r\n    }\r\n  }\r\n\r\n  //  return all event centers\r\n  getEventCenters(req, res) {\r\n    return centers\r\n    .findAll()\r\n    .then(eventCenter => {\r\n      if(eventCenter){\r\n        res.status(200).send(eventCenter)\r\n      }\r\n    })\r\n    .catch(error => res.status(404).send({ message: 'No event center found'}))\r\n  }\r\n  \r\n  // an event center given its it id is present\r\n  getEventCenter(req, res) {\r\n    const centerId = parseInt(req.params.centerId)\r\n    return centers\r\n    .find(\r\n      {\r\n        where:{\r\n          id: centerId\r\n        }\r\n      }\r\n    )\r\n    .then(eventCenter => {\r\n      if(eventCenter){\r\n        res.status(200).send(eventCenter);\r\n      }\r\n    } )\r\n    .catch(error => res.status(404).send({\r\n      message: 'No center is found matching this Id'\r\n    }))\r\n  }\r\n\r\n  // get an event center by name\r\n  getCenterByName(req, res) {\r\n    return centers\r\n    .find(\r\n      {\r\n        where:{ \r\n          name:req.params.name\r\n        }\r\n      }\r\n    )\r\n    .then(eventCenter => {\r\n      if(eventCenter){\r\n        res.status(200).send(eventCenter);\r\n      } else {\r\n        res.status(404).send({ message: 'No center found for this name'});\r\n      }\r\n    } )\r\n    .catch(error => res.status(204).send({\r\n      message: 'No center is found matching this Id'\r\n    }))\r\n  }\r\n   // get an event center by location\r\n   getCenterByLocation(req, res) {\r\n    return centers\r\n    .find(\r\n      {\r\n        where: {\r\n          location: req.params.location\r\n        }\r\n      }\r\n    )\r\n    .then(eventCenters => {\r\n      if(eventCenters){\r\n        res.status(200).send(eventCenters);\r\n      }\r\n    } )\r\n    .catch(error => res.status(204).send({\r\n      message: 'No center is found matching this Id'\r\n    }))\r\n  }\r\n\r\n  updateEventCenter(req, res) {\r\n    if(req.body.userType === 'admin') {\r\n      const centerId = parseInt(req.params.centerId)\r\n      return centers\r\n      .find(\r\n        {\r\n          where: {\r\n            id: centerId\r\n        }\r\n      }\r\n      )\r\n      .then(eventCenter => {\r\n        if(eventCenter){\r\n          return eventCenter\r\n          .update({\r\n            centerName: req.body.centerName || eventCenter.centerName,\r\n            location:req.body.location || eventCenter.location,\r\n            sits: req.body.sits || eventCenter.sits,\r\n            cost: req.body.cost || eventCenter.cost,\r\n            facilities: req.body.facilities || eventCenter.facilities\r\n          })\r\n          .then(updatedCenter => {\r\n            res.status(201).send(updatedCenter)\r\n          })\r\n        } else {\r\n          res.status(404).send({message: 'Event center not found'});\r\n        }\r\n      })\r\n      .catch(error => {\r\n        res.status(500).send(error)\r\n      })\r\n    } else {\r\n      res.status(402).send({ message: 'You are allowed to perform this action'})\r\n    }\r\n  }\r\n  deleteEventCenter(req, res) {\r\n    if(req.body.userType === 'admin') {\r\n      const centerId = parseInt(req.params.centerId)\r\n      return centers\r\n      .find(\r\n        {\r\n          where: {\r\n            id: centerId\r\n        }\r\n      }\r\n      )\r\n      .then(eventCenter => {\r\n        if(eventCenter){\r\n          return eventCenter\r\n          .destroy({\r\n            where:{\r\n              id:centerId\r\n            }\r\n          })\r\n          .then(updatedCenter => {\r\n            res.status(200).send({ message: 'center has been deleted'})\r\n          })\r\n        } else {\r\n          res.status(404).send({message: 'Event center not found'});\r\n        }\r\n      })\r\n      .catch(error => {\r\n        res.status(500).send(error)\r\n      })\r\n    } else {\r\n      res.status(402).send({ message: 'You are allowed to perform this action'})\r\n    }\r\n  }\r\n\r\n};\r\nexport default EventCenterController;\r\n"]}